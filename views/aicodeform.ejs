<%- include ./user.head.ejs %>
  <%- include inc/htmlTemplate.ejs %>

    <script type="text/javascript">

      function clearRequest() {
        $("#ac_name").val("");
        $("#request").val("");
        $("#table_schema").val("");
        $("#content").val("");
      }

      function setSampleData(type) {
        $("#sampledataModal").modal("show");
      }

      function guide() {
        window.open("/guide", "_blank");
      }

      function copyContent() {
        if (!$.trim($("#content").val())) {
          $("#content").focus();
          alert("내용이 없습니다.");
          return false;
        }
        var content = document.getElementById("content");
        content.select();
        document.execCommand("copy");
        alert("Code를 복사하였습니다");
      }

      function downloadContent() {
        if (!$.trim($("#content").val())) {
          $("#content").focus();
          alert("내용이 없습니다.");
          return false;
        }
        var text = $('#content').val();
        var request = $('#request').val();
        var fname = request.substring(0, 20).trim();
        if (!fname) fname = "download";
        var blob = new Blob([text], { type: "text/plain;charset=utf-8" });
        var link = document.createElement("a");
        link.href = URL.createObjectURL(blob);
        link.download = fname + ".txt";
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
      }

      function requestGenerate() {
        console.log("requestGenerate..");

        if (!$("#request").val()) {
          $("#request").focus();
          alert("요구사항을 입력하세요.");
          return false;
        }

        var form = document.workForm;
        event.preventDefault();
        $("#infering").show();
        $("#content").val("");
        const formData = new URLSearchParams(new FormData(document.workForm));
        console.log("formData=" + formData);
        fetch("generateAicode", {
          method: "POST",
          mode: "same-origin",
          credentials: "same-origin",
          body: formData,
        }).then((res) => {
          res
            .json()
            .then((response) => {
              console.log("response=" + JSON.stringify(response));
              if (response.status == 200) {
                //toastr.success("등록하였습니다");
                console.log(response.message);
                $("#content").val(response.content);
              } else {
                toastr.warning(response.message);
                console.log(response.message);
                return;
              }
            })
            .catch((error) => {
              $("#infering").hide();
              toastr.error("에러가 발생 하였습니다.");
              console.log(error);
            })
            .finally(() => {
              $("#infering").hide();
            });
        });
      }

      function update() {
        $('input[type!="hidden"][required], textarea[required]').each(function () {
          if (!$(this).val()) {
            $(this).focus();
            alert(`${$(this).attr("name")}은(는) 필수 입력 항목입니다.`);
            return false;
          }
        });

        event.preventDefault();
        const formData = new URLSearchParams(new FormData(document.workForm));
        fetch("/addAicode", {
          method: "POST",
          mode: "same-origin",
          credentials: "same-origin",
          body: formData,
        })
          .then((res) => res.json())
          .then((response) => {
            if (response.status == 200) {
              toastr.success("등록하였습니다");
            } else {
              toastr.warning(response.message);
            }
          })
          .catch((error) => {
            toastr.error("에러가 발생 하였습니다.");
          });
      }


      function getDataModelTree() {

        console.log("getDatamodelTree..");
        fetch(`/getDatamodelTree`, {
          method: "GET",
          mode: "same-origin",
          credentials: "same-origin",
        })
          .then(response => response.json())
          .then(data => {
            if (!data) {
              alert("테이블 정보가 없습니다.");
              return;
            }
            console.log(JSON.stringify(data));
            $('#treeview').jstree({
              'core': {
                'data': data
              }
            });
            $('#treeview').jstree(true).settings.core.data = data;
            $('#treeview').jstree(true).refresh();
          })
          .catch(error => {
            toastr.error('조회중 에러가 발생하였습니다.' + error);
            console.log('조회중 에러가 발생하였습니다.', error);
          });
      }

      var currentPjt = { pjt_id: "", pjt_code: "", pjt_name: "" };

      function getCurrentPjt() {
        console.log("getCurrentPjt=");

        fetch(`/listPjtcode`, {
          method: "GET",
          mode: "same-origin",
          credentials: "same-origin",
        })
          .then(response => response.json())
          .then(data => {
            console.log('listPjtcode=' + JSON.stringify(data));

            $.each(data, function (index, Pjtcode) {
              if (Pjtcode.pjt_id == Pjtcode.current_pjt_id) {
                currentPjt.pjt_id = Pjtcode.pjt_id;
                currentPjt.pjt_code = Pjtcode.pjt_code;
                currentPjt.pjt_name = Pjtcode.pjt_name;
              }
            });
            $("#current_pjt_id").val(currentPjt.pjt_id);
            $("#current_pjt_name").val(currentPjt.pjt_name);

          })
          .catch(error => console.error('Error fetching data:', error));
      }

      $(document).ready(function () {

        getCurrentPjt();

        $('input[type!="hidden"]:empty, textarea:empty').each(function () {
          //$(this).val("Sample Data");
        });

        $("#request").val("Write program code ");
        fillTargetSelectBox(targetlist);
        fillLanguageSelectBox(languagelist);
        fillFrameworkSelectBox(frameworklist);
        setupTargetSelectBoxListener();
        setupFrameworkSelectBoxListener();
        setInitialComponentSelectbox();


        $("#listContainer li").on("click", function () {
          let selectedValue = $(this).text();
          $("#ac_name").val("acode" + selectedValue.substring(0, 1));
          $("#request").val(selectedValue);
          $("#content").val("");
          $("#sampledataModal").modal("hide");
        });

      });


      function list() {
        var form = document.workForm;
        form.method = "GET";
        form.action = "/getAicodes";
        form.submit();
      }

      var targetlist = ["function", "logic", "component"];

      function fillTargetSelectBox(list) {
        var selectBox = document.getElementById('target');

        list.forEach(function (item) {
          var option = document.createElement('option');
          option.value = item;
          option.text = item;
          selectBox.appendChild(option);
        });
      }

      var languagelist = ["java", "javascript/html/css", "csharp", "sql"];

      function fillLanguageSelectBox(list) {
        var selectBox = document.getElementById('language');

        list.forEach(function (item) {
          var option = document.createElement('option');
          option.value = item;
          option.text = item;
          selectBox.appendChild(option);
        });
      }

      var frameworklist = ["springboot", "vuejs", "nodejs", "ejs"];

      function fillFrameworkSelectBox(list) {
        var selectBox = document.getElementById('framework');

        list.forEach(function (item) {
          var option = document.createElement('option');
          option.value = item;
          option.text = item;
          selectBox.appendChild(option);
        });
      }

      function setupTargetSelectBoxListener() {
        var selectBox = document.getElementById('target');
        var frameworkDiv = document.getElementById('frameworkDiv');
        var languageDiv = document.getElementById('language');
        var languageLabelDiv = document.getElementById('languageLabel');

        selectBox.addEventListener('change', function () {
          if (selectBox.value === 'component') {
            frameworkDiv.style.display = 'block';
            languageDiv.style.visibility = 'hidden';
            languageLabelDiv.style.visibility = 'hidden';
          } else {
            frameworkDiv.style.display = 'none';
            languageDiv.style.visibility = 'visible';
            languageLabelDiv.style.visibility = 'visible';
          }
        });
      }


      function setupFrameworkSelectBoxListener() {
        var $selectBox = $('#framework');
        var $componentSelectBox = $('#module_type');

        $selectBox.on('change', function () {
          console.log("framework select=" + $selectBox.val());

          if ($selectBox.val()) {
            var list = getTypelist($selectBox.val());

            $componentSelectBox.empty();

            $.each(list, function (index, item) {
              console.log("type=" + item.type);
              var $option = $('<option></option>').val(item.type).text(item.type);
              $componentSelectBox.append($option);
            });
          } else {
            $componentSelectBox.empty();
          }
        });
      }

      function setInitialComponentSelectbox() {
        var $componentSelectBox = $('#module_type');
        var list = getTypelist("springboot");
        $componentSelectBox.empty();
        $.each(list, function (index, item) {
          console.log("type=" + item.type);
          var $option = $('<option></option>').val(item.type).text(item.type);
          $componentSelectBox.append($option);
        });

      }

      function getTypelist(framework) {

        if (framework == 'vuejs') {
          var typeList = [
            { type: "list" },
            { type: "create" },
            { type: "edit" },
            { type: "delete" },
            { type: "DataService" },
            { type: "router" },
          ];
          return typeList;

        } else if (framework == 'springboot') {

          var typeList = [

            { type: "Controller" },
            { type: "DAO" },
            { type: "VO" },
            { type: "Mapper" },
            { type: "Service" },
            { type: "ServiceImpl" },
            { type: "sqlmap" },
            { type: "sqlmapconfig" },
            { type: "sql-mapper-config" },
          ];

          return typeList;

        } else if (framework == 'springquery') {
          var typeList = [
            { type: "sqlmapper", name: "ProductMapper.java", url: "ProductMapper.js" },
            { type: "controller", name: "ProductController.java", url: "ProductController.java" },
            { type: "service", name: "ProductService.java", url: "ProductService.java" },
          ];
          return typeList;
        } else if (framework == 'nodejs') {
          var typeList = [
            { type: "model" },
            { type: "controller" },
            { type: "router" },
          ];
          return typeList;
        } else if (framework == 'ejs') {
          var typeList = [
            { type: "list" },
            { type: "form" },
            { type: "view" },
          ];
          return typeList;
        }
      }

      function getColumnInfo(pid) {

        console.log("getColumnInfo=" + pid);
        fetch(`/getColumnInfo/${pid}`, {
          method: "GET",
          mode: "same-origin",
          credentials: "same-origin",
        })
        fetch(`/getColumnInfo/${pid}`, {
          method: "GET",
          mode: "same-origin",
          credentials: "same-origin",
        })
          .then(response => response.json())
          .then(row => {
            console.log(row.data);
            const columns = JSON.parse(row.data);
            let html = '<ul>';
            columns.forEach(column => {
              html += `<li class="column-item" data-column="${column.column}" 
        data-column-name="${column.column_comment}" style="cursor:pointer;">
          ${column.seq}) ${column.column_comment}
          <a href="javascript:setField( 'fld', '${row.db_name}.${row.table_id}', '${column.column}')">
            <i class="fa fa-paste" title="데이터스키마에 붙여넣기"></i></a>    
        </li>`;

            });
            html += '</ul>';
            console.log(html);
            $('#columnTableNameDiv').html(row.table_name);
            $('#columnInfoDiv').html(html);
          })
          .catch(err => {
            console.error('에러가 발생하였습니다.', err);
          });

      }


      function setField(type, table, col) {
        console.log(`setField=${type}, ${table}, ${col}`);
        let item = table.split(".")[1] + "." + col;
        if (type == "fld") {
          let val = $("#table_schema").val();
          if (val.includes(item) == false) {
            if (val != "") item = ", " + item;
            $("#table_schema").val(val + item);
          }
        }
      }

    </script>

    <script>
      (function (H) { H.className = H.className.replace(/\bno-js\b/, 'js') })(document.documentElement);

      document.addEventListener("DOMContentLoaded", function () {
        document.getElementById("fouc").style.display = "block";
        // 이곳에 다른 초기화 코드 추가
      });
    </script>

    <style>
      #loading {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        /* 반투명 배경 */
        display: flex;
        justify-content: center;
        /* 가로 중앙 정렬 */
        align-items: center;
        /* 세로 중앙 정렬 */
        z-index: 1000;
        /* 최상위 레이어 */
      }

      #infering {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        /* 반투명 배경 */
        display: flex;
        justify-content: center;
        /* 가로 중앙 정렬 */
        align-items: center;
        /* 세로 중앙 정렬 */
        z-index: 1000;
        /* 최상위 레이어 */
      }

      #loading-content {
        padding: 20px;
        background-color: #fff;
        /* 배경색 */
        border-radius: 10px;
        /* 모서리 둥글게 */
        text-align: center;
        /* 텍스트 중앙 정렬 */
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        /* 그림자 효과 */
      }

      .loading-spinner {
        border: 4px solid #f3f3f3;
        /* 회색 */
        border-top: 4px solid #3498db;
        /* 파란색 */
        border-radius: 50%;
        width: 40px;
        height: 40px;
        animation: spin 2s linear infinite;
        margin: 0 auto;
        /* 가로 중앙 정렬 */
      }

      @keyframes spin {
        0% {
          transform: rotate(0deg);
        }

        100% {
          transform: rotate(360deg);
        }
      }
    </style>



    <style>
      .a,
      .ul,
      .li {
        text-decoration: none;
      }

      .no-caret {
        list-style-type: none;
      }

      .custom-input-group {
        border: 1px solid #ced4da;
        /* Bootstrap 기본 보더 색상 */
        border-radius: .25rem;
        /* Bootstrap 기본 border-radius */
        display: flex;
        /* 한 줄에 나오게 하기 위해 flexbox 사용 */
      }

      .custom-input {
        border: 0;
        /* 입력 필드의 보더 제거 */
        box-shadow: none;
        /* 입력 필드의 그림자 제거 */
      }

      .custom-clear-button {
        background-color: transparent;
        /* 버튼 배경 투명 */
        border: 0;
        /* 버튼의 보더 제거 */
      }

      .custom-input-group .custom-input:focus {
        box-shadow: none;
        /* 입력 필드 포커스 시 그림자 제거 */
      }

      .container-flex {
        display: flex;
        flex-direction: row;
        width: 100%;
      }


      .sidebar-left,
      .sidebar-right,
      .center-content {
        flex: 1;
      }

      .sidebar-left {
        display: flex;
        flex-direction: column;
        height: 100%;
        /* 또는 부모 요소의 높이에 따라 조정 */
      }

      #datagrpDiv {
        height: 250px;
        margin-top: 10px;
        overflow-y: auto;
      }

      #columnInfoDiv {
        height: 250px;
        margin-top: 10px;
        margin-left: 10px;
        overflow-y: auto;
      }

      .divider {
        flex: 0.001;
        background-color: #f5f5f5;
      }

      .center-content {
        flex: 3;
      }

      .sidebar-right {
        flex: 1;
      }

      .box-body {
        padding: 20px;
      }
    </style>

    <style>
      .datagrp-name {
        cursor: pointer;
        display: flex;
        align-items: center;
        padding: 5px;
        color: #111111;
        text-decoration: none;
      }

      .datagrp-name:hover {
        text-decoration: none;
      }

      .db-icon,
      .table-icon {
        margin-right: 5px;
      }

      .query_comment {
        font-size: 10pt;
        color: #777;
      }
    </style>

    <style>
      #loading {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        /* 반투명 배경 */
        display: flex;
        justify-content: center;
        /* 가로 중앙 정렬 */
        align-items: center;
        /* 세로 중앙 정렬 */
        z-index: 1000;
        /* 최상위 레이어 */
      }

      #infering {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        /* 반투명 배경 */
        display: flex;
        justify-content: center;
        /* 가로 중앙 정렬 */
        align-items: center;
        /* 세로 중앙 정렬 */
        z-index: 1000;
        /* 최상위 레이어 */
      }

      #loading-content {
        padding: 20px;
        background-color: #fff;
        /* 배경색 */
        border-radius: 10px;
        /* 모서리 둥글게 */
        text-align: center;
        /* 텍스트 중앙 정렬 */
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        /* 그림자 효과 */
      }

      .loading-spinner {
        border: 4px solid #f3f3f3;
        /* 회색 */
        border-top: 4px solid #3498db;
        /* 파란색 */
        border-radius: 50%;
        width: 40px;
        height: 40px;
        animation: spin 2s linear infinite;
        margin: 0 auto;
        /* 가로 중앙 정렬 */
      }

      @keyframes spin {
        0% {
          transform: rotate(0deg);
        }

        100% {
          transform: rotate(360deg);
        }
      }
    </style>

    <% if(message.length){ %>
      <script>toastr.success("<%=message%>")</script>
      <% } %>
        <% if(err.length){ %>
          <script>toastr.success("<%=err%>")</script>
          <% } %>

            <div id="infering" style="display: none;">
              <div id="loading-content">
                <div class="loading-spinner"></div>
                Code 작성중...
              </div>
            </div>

            <div id="loading" style="display: none;">
              <div id="loading-content">
                <div class="loading-spinner"></div>
                로딩 중...
              </div>
            </div>

            <script>
              $('#sampledataModal').on('shown.bs.modal', function () {
                $('#myInput').trigger('focus')
              })


            </script>
            <style>
              #sampledataModal {
                top: 200px;
              }

              ul {
                list-style-type: none;
                padding-left: 20px;
              }

              li {
                position: relative;
                cursor: pointer;
              }
            </style>

            <div id="infering" style="display: none;">
              <div id="loading-content">
                <div class="loading-spinner"></div>
                Query 작성중...
              </div>
            </div>

            <div id="sampledataModal" class="modal fade" tabindex="-1" role="dialog">
              <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                  <div class="modal-header">
                    <h5 class="modal-title">샘플 </h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                      <span aria-hidden="true">&times;</span>
                    </button>
                  </div>
                  <div class="modal-body text-left">
                    <ul id="listContainer">
                      <li>1. Bootstrap css를 사용하는 로그인 Web 화면 작성하기: 항목(mb_email, mb_password)</li>
                      <li>2. 년월을 주었을때 해당 월의 날자수를 계산하기: 언어-javascript</li>
                      <li>3. Springboot API Controller - 로그인 체크: 항목(mb_email, mb_password)</li>
                      <li>4. Springboot API Controller(데이터스키마를 지정하세오)</li>
                      <li>5. 회원조회api(getMember)를 fetch해서 form에 채워넣는 함수 만들기: 언어-javascript, 항목-회원id,성명,이메일,핸드폰</li>
                      <li>6. 회원정보 입력 폼: 언어-html/jquery, 항목-회원id,성명,이메일,핸드폰</li>
                      <li>7. 회원정보 입력 폼: 언어-VueJS/javascript, 항목-회원id,성명,이메일,핸드폰</li>
                      <li>8. 회원정보 등록 api: 언어-nodejs, 항목-mb_id(회원id),mb_name(성명),mb_email(이메일),mb_hp(핸드폰)</li>
                      <li>9. 메뉴Tree 를 조회하기, start with/connect by를 사용하는 Oracle SQL, menu table ( menu_id, menu_name,
                        menu_type(1=폴더/2=메뉴), up_menu_id=상위폴더 )</li>
                    </ul>
                  </div>
                  <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                  </div>
                </div>
              </div>
            </div>

            <div class="content-wrapper">

              <!-- Content Header (Page header) -->
              <section class="content-header">
                <h1>Playground

                  <small>AiCode</small>
                </h1>
                <ol class="breadcrumb">
                  <li>
                    <a href="#"><i class="fa fa-dashboard"></i> Home > Playground</a>
                  </li>
                  <li class="active"></li>
                </ol>
              </section>

              <section class="content">
                <div class="row">
                  <div class="box box-info">
                    <div class="container-flex" style="background-color: #fff;">
                      <div class="center-content">

                        <div class="row" style="margin-right:15px; margin-top:10px;">
                          <!-- <button type="button" title="안내" onclick="guide()" class="pull-right btn transparent-button"
                          id="helpBtn">
                          <i class="fa fa-question-circle"></i>
                        </button> -->
                          <button type="button" title="Clear" onclick="clearRequest()"
                            class="pull-right btn transparent-button" style="margin-right:5px;" id="clearRequestBtn">
                            <i class="fa fa-eraser"></i></button>
                          <button type="button" title="샘플" onclick="setSampleData(1)"
                            class="pull-right btn transparent-button" style="margin-right:5px;" id="setSampleDataBtn">
                            Sample</button>

                        </div>

                        <div class="box-body">
                          <form method="post" id="workForm" name="workForm">
                            <input type="hidden" name="pjt_id" id="pjt_id" value="<%= info.pjt_id %>" />
                            <input type="hidden" readonly class="form-control" id="ac_id" name="ac_id"
                              value="<%= info.ac_id %>" />
                            <input type="hidden" class="form-control" id="ac_name" name="ac_name" value="" />
                            <div class="form-group">
                              <label>요구사항</label>
                              <textarea class="form-control" id="request" name="request" rows=4 /></textarea>
                            </div>
                            <div class="form-group" style="display:none">
                              <label>Target</label>
                              <select class="form-control" id="target" name="target">
                              </select>
                              <label id="languageLabel">언어</label>
                              <select class="form-control" id="language" name="language">
                              </select>
                            </div>
                            <div id="frameworkDiv" style="display:none;">
                              <div class="form-group">
                                <label>프레임웍</label>
                                <select class="form-control" id="framework" name="framework">
                                </select>

                                <label>컴포넌트</label>
                                <select class="form-control" id="module_type" name="module_type">
                                </select>
                              </div>
                            </div>
                            <input type="hidden" class="form-control" id="datagrp_id" name="datagrp_id">
                            <!-- <div class="form-group">
                              <label>데이터그룹ID</label>
                              <select class="form-control" id="datagrp_id" name="datagrp_id">
                              </select>
                            </div> -->
                            <div class="form-group">
                              <label>데이터스키마</label>
                              <textarea class="form-control" id="table_schema" name="table_schema" rows=4 /></textarea>
                            </div>
                            <div class="form-group">
                              <button type="button" onclick="requestGenerate()" class="pull-right btn btn-default"
                                id="send" style="margin-right: 5px;">
                                <i class="fa fa-paper-plane"></i> Submit
                              </button>
                              <button type="button" class="pull-right btn btn-default" onclick="update()">
                                <i class="fa fa-save"></i> 저장
                              </button>

                            </div>

                            <div class="form-group">
                              <label>생성된코드</label>
                              <textarea class="form-control" id="content" name="content" rows=12 /></textarea>
                            </div>
                            <input type="hidden" class="form-control" id="file_name" name="file_name"
                              value="<%= info.file_name %>" />
                            <input type="hidden" class="form-control" id="pjt_code" name="pjt_code"
                              value="<%= info.pjt_code %>" />
                            <input type="hidden" class="form-control" id="org_id" name="org_id"
                              value="<%= info.org_id %>" />
                            <input type="hidden" class="form-control" id="reg_mb_id" name="reg_mb_id"
                              value="<%= info.reg_mb_id %>" />
                            <input type="hidden" class="form-control" id="reg_dt" name="reg_dt"
                              value="<%= info.reg_dt %>" />

                            <!-- Buttons -->
                            <div class="form-group">
                              <div class="form-inline text-center">

                                <button type="button" onclick="clearRequest()" class="pull-right btn btn-default"
                                  id="clear">
                                  <i class="fa fa-eraser"></i> Clear
                                </button>

                                <button type="button" onclick="copyContent()" class="pull-right btn btn-default"
                                  style="margin-right: 5px;" id="copy">
                                  <i class="fa fa-copy"></i> Copy Code
                                </button>
                                <button type="button" onclick="downloadContent()" class="pull-right btn btn-default"
                                  style="margin-right: 5px;" id="download">
                                  <i class="fa fa-file-excel-o"></i> Download Code
                                </button>

                                <!-- <button type="button" class="pull-right btn btn-default" style="margin-right: 5px"
                                  onclick="list()">
                                  <i class="fa fa-list"></i> 목록
                                </button> -->
                              </div>
                            </div>
                          </form>
                        </div>
                      </div>

                      <div class="divider"></div>
                      <div class="sidebar-right">

                        <div style="font-weight:bold; font-size:12pt;  padding:5px; margin-top:3px; margin-left:3px; "
                          id="metarelationlist-title">테이블정보
                        </div>
                        <div style="margin-top:5px; height:1px; background-color:#f5f5f5; "></div>
                        <div id="tableInfoDiv" style="height:350px; overflow-y: auto;">
                          <ul>
                            <% let currentDbName='' ; %>
                              <% datamodelList.forEach(function(model, index) { %>
                                <% if (model.db_name !==currentDbName) { %>
                                  <% if (currentDbName !=='' ) { %>
                          </ul>
                          <% } %>
                            <li>
                              <a href="javascript:void(0);" class="db-name" data-toggle="collapse"
                                data-target="#db_<%= index %>">
                                <i class="fa fa-database db-icon"></i>
                                <%= model.db_name %>
                              </a>
                              <div id="db_<%= index %>" class="collapse">
                                <ul>
                                  <% } %>
                                    <li class="table-name" data-id="<%= model.id %>" data-name="<%= model.table_name %>"
                                      data-dbname="<%= model.db_name %>" style="cursor: pointer;">
                                      <i class="fa fa-table table-icon"></i>
                                      <a href="javascript:getColumnInfo('<%= model.id %>')">
                                        <%= model.table_name %>(<%= model.table_id %>)
                                      </a>
                                    </li>

                                    <% currentDbName=model.db_name; %>
                                      <% }); %>
                                        <% if (datamodelList.length> 0) { %>
                                </ul>
                              </div>
                              <% } %>
                            </li>
                            </ul>
                        </div>

                        <div style="margin-top:5px; height:1px; background-color:#f5f5f5; "></div>
                        <div id="columnTableNameDiv" name="columnTableNameDiv" style="margin-top:5px; "></div>
                        <div id="columnInfoDiv" name="columnInfoDiv" style="margin-left: 10px;">

                        </div>

                      </div>
                    </div>

                  </div>
                </div>
              </section>

            </div>

            <!-- /.content -->

            <%-include user.tail.ejs %>

              %>